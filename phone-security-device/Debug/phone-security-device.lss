
phone-security-device.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000000e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000092  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000000e6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000118  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007e9  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006d6  00000000  00000000  000009a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000036d  00000000  00000000  0000107f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000007c  00000000  00000000  000013ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039b  00000000  00000000  00001468  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000041  00000000  00000000  00001803  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001844  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61
  40:	19 d0       	rcall	.+50     	; 0x74 <main>
  42:	25 c0       	rjmp	.+74     	; 0x8e <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <activationPort>:

#include "lib_74hc595.h"

void activationPort () //–§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Ä—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–¥–≤–∏–≥–æ–≤—ã–º —Ä–µ–≥–∏—Å—Ç—Ä–æ–º 74ch595
{
	PORTD &= ~(1<<PD7)|(1<<PD6)|(1<<PD5);
  46:	5f 98       	cbi	0x0b, 7	; 11
	DDRD |= (1<<PD7)|(1<<PD6)|(1<<PD5);
  48:	8a b1       	in	r24, 0x0a	; 10
  4a:	80 6e       	ori	r24, 0xE0	; 224
  4c:	8a b9       	out	0x0a, r24	; 10
	
	PORTB &= ~(1<<PB6)|(1<<PB7);
  4e:	2e 98       	cbi	0x05, 6	; 5
	DDRD |= (1<<PB6)|(1<<PB7);
  50:	8a b1       	in	r24, 0x0a	; 10
  52:	80 6c       	ori	r24, 0xC0	; 192
  54:	8a b9       	out	0x0a, r24	; 10
  56:	08 95       	ret

00000058 <test74hc595>:
}

void test74hc595 () // —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–¥–≤–∏–≥–æ–≤–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞ 74hc595, –∞–∫—Ç–µ–≤–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –ø–∏–Ω, –Ω–æ–º–µ—Ä –ø–∏–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π i –≤ —Ñ—É–Ω–∫—Ü–∏–∏ for
{
	OE_on;
  58:	2f 98       	cbi	0x05, 7	; 5
	MR_on;
  5a:	2e 9a       	sbi	0x05, 6	; 5
	
	DS_UP;
  5c:	5d 9a       	sbi	0x0b, 5	; 11
  5e:	85 e0       	ldi	r24, 0x05	; 5
  60:	90 e0       	ldi	r25, 0x00	; 0
	for (int i = 0; i <= 4; i++)
	{
		SHCP_UP;
  62:	5e 9a       	sbi	0x0b, 6	; 11
		SHCP_DOWN;
  64:	5e 98       	cbi	0x0b, 6	; 11
		if (DS_CHECK_UP) DS_DOWN;
  66:	4d 99       	sbic	0x09, 5	; 9
  68:	5d 98       	cbi	0x0b, 5	; 11
  6a:	01 97       	sbiw	r24, 0x01	; 1
{
	OE_on;
	MR_on;
	
	DS_UP;
	for (int i = 0; i <= 4; i++)
  6c:	d1 f7       	brne	.-12     	; 0x62 <test74hc595+0xa>
		SHCP_UP;
		SHCP_DOWN;
		if (DS_CHECK_UP) DS_DOWN;
		
	}
	STCP_UP;
  6e:	5f 9a       	sbi	0x0b, 7	; 11
	STCP_DOWN;
  70:	5f 98       	cbi	0x0b, 7	; 11
  72:	08 95       	ret

00000074 <main>:


int main(void)
{
	
setupCPU();
  74:	03 d0       	rcall	.+6      	; 0x7c <setupCPU>
activationPort();
  76:	e7 df       	rcall	.-50     	; 0x46 <activationPort>

test74hc595();
  78:	ef df       	rcall	.-34     	; 0x58 <test74hc595>
  7a:	ff cf       	rjmp	.-2      	; 0x7a <main+0x6>

0000007c <setupCPU>:
#include "setupCPU.h"

void setupCPU () //ÙÛÌÍˆËˇ ÔÂ‚ÓÌ‡˜‡Î¸ÌÓÈ Ì‡ÒÚÓÈÍË ÔÓˆÂÒÒÓ‡
{
	
	PORTD = 0x00;
  7c:	1b b8       	out	0x0b, r1	; 11
	DDRD = 0xFF;
  7e:	8f ef       	ldi	r24, 0xFF	; 255
  80:	8a b9       	out	0x0a, r24	; 10
	
	PORTB = 0x00;
  82:	15 b8       	out	0x05, r1	; 5
	DDRB = 0xFF;
  84:	84 b9       	out	0x04, r24	; 4
	
	PORTC = 0x00;
  86:	18 b8       	out	0x08, r1	; 8
	DDRC = 0x3F;
  88:	8f e3       	ldi	r24, 0x3F	; 63
  8a:	87 b9       	out	0x07, r24	; 7
  8c:	08 95       	ret

0000008e <_exit>:
  8e:	f8 94       	cli

00000090 <__stop_program>:
  90:	ff cf       	rjmp	.-2      	; 0x90 <__stop_program>
